[
   {
      "author": "pmfoysal",
      "date": 1655661600000,
      "title": "What is the difference between JavaScript and NodeJS?",
      "image": "https://raw.githubusercontent.com/pmfoysal/data/main/images/blog-001.jpg",
      "body": "Javascript is a Scripting language. It is mostly abbreviated as JS. It can be said that Javascript is the updated version of the ECMA script. Javascript is a high-level programming language that uses the concept of Oops but it is based on prototype inheritance. <br /> <br /> NodeJS is a cross-platform and opensource Javascript runtime environment that allows the javascript to be run on the server-side. Nodejs allows Javascript code to run outside the browser. Nodejs comes with a lot of modules and mostly used in web development. <br /> <br /> <strong>JavaScript:</strong> <br /> <strong>1. </strong> Javascript is a programming language that is used for writing scripts on the website. <br /> <strong>2. </strong> Javascript can only be run in the browsers. <br /> <strong>3. </strong> It is basically used on the client-side. <br /> <strong>4. </strong> Javascript is capable enough to add HTML and play with the DOM. <br /> <strong>5. </strong> Javascript can run in any browser engine as like JS core in safari and Spidermonkey in Firefox. <br /> <strong>6. </strong> Javascript is used in frontend development. <br /> <strong>7. </strong> Some of the javascript frameworks are RamdaJS, TypedJS, etc. <br /> <br /> <strong>NodeJS:</strong> <br /> <strong>1. </strong> NodeJS is a Javascript runtime environment. <br /> <strong>2. </strong> We can run Javascript outside the browser with the help of NodeJS. <br /> <strong>3. </strong> It is mostly used on the server-side. <br /> <strong>4. </strong> Nodejs does not have capability to add HTML tags. <br /> <strong>5. </strong> V8 is the Javascript engine inside of node.js that parses and runs Javascript. <br /> <strong>6. </strong> Nodejs is used in server-side development. <br /> <strong>7. </strong> Some of the Nodejs modules are Lodash, express etc. These modules are to be imported from npm."
   },
   {
      "author": "pmfoysal",
      "date": 1652983200000,
      "title": "When should you use NodeJS and when should you use MongoDB?",
      "image": "https://raw.githubusercontent.com/pmfoysal/data/main/images/blog-002.jpg",
      "body": "Nodejs is a JavaScript engine that you can write any application you want with (by programming in the JavaScript language). It runs your JavaScript code. Most commonly, it is used to build servers that can respond to web requests, though it can be used for lots of other types of code too. <br /> <br /> MongoDB is a database engine. Code within some application or server uses MongoDB to save, query or update data in a database. There are many web servers built with nodejs that will then use MongoDB for storing data. MongoDB offers an API library that runs within a Nodejs application to give you programmatic access to MongoDB so you can create databases and then add, query, update or delete data from the MongoDB database. MongoDB also has API libraries for other programming environments such as Python, Java, etc. <br /> <br /> <strong>When NodeJS:</strong> <br /> Any project needs a programming environment and a runtime library that offers you basic programming tools/support and can compile and/or interpret your code. Nodejs is such as tool for the Javascript programming language. There are other similar tools for other languages such as Python, Java, PHP, C#, C++, Go, etc. So, if you want to write some kind of stand-alone program or server in Javascript, then you can use nodejs for it. <br /> <br /> <strong>When MongoDB:</strong> <br /> If your application needs the ability to persistently store data in a way that you can efficiently query or update it later, then you would typically use some form of database. There are dozens of popular databases. MongoDB is one such database. MariaDB, MySql, CouchDB, DynamoDB (on AWS), Postgres are examples of othe databases. Different databases have different strengths (things they are best at) and different ways of using them so it's a whole different question to choose the right/best database for what you're doing."
   },
   {
      "author": "pmfoysal",
      "date": 1650391200000,
      "title": "What is the difference between SQL and NoSQL?",
      "image": "https://raw.githubusercontent.com/pmfoysal/data/main/images/blog-003.jpg",
      "body": "SQL databases defines and manipulates data based Structured Query Language (SQL). Seeing from a side this language is extremely powerful. SQL is one of the most versatile and widely-used options available which makes it a safe choice especially for great complex queries. But from other side it can be restrictive. SQL requires you to use predefined schemas to determine the structure of your data before you work with it. Also all of your data must follow the same structure. This can require significant up-front preparation which means that a change in the structure would be both difficult and disruptive to your whole system. <br /> <br /> A NoSQL database has dynamic schema for unstructured data. Data is stored in many ways which means it can be document-oriented, column-oriented, graph-based or organized as a KeyValue store. This flexibility means that documents can be created without having defined structure first. Also each document can have its own unique structure. The syntax varies from database to database, and you can add fields as you go. <br /> <br /> <strong>SQL Database:</strong> <br /> <strong>1. </strong> Relational Database Management System (RDBMS). <br /> <strong>2. </strong> These databases have fixed or static or predefined schema. <br /> <strong>3. </strong> These databases are not suited for hierarchical data storage. <br /> <strong>4. </strong> These databases are best suited for complex queries. <br /> <strong>5. </strong> Vertically Scalable. <br /> <strong>6. </strong> Follows ACID property. <br /> <br /> <strong>NoSQL Database:</strong> <br /> <strong>1. </strong> Non-relational or distributed database system. <br /> <strong>2. </strong> They have dynamic schema. <br /> <strong>3. </strong> These databases are best suited for hierarchical data storage. <br /> <strong>4. </strong> These databases are not so good for complex queries. <br /> <strong>5. </strong> Horizontally scalable. <br /> <strong>6. </strong> Follows CAP(consistency, availability, partition tolerance)."
   },
   {
      "author": "pmfoysal",
      "date": 1647712800000,
      "title": "What is the purpose of JSON Web Token and how does it work?",
      "image": "https://raw.githubusercontent.com/pmfoysal/data/main/images/blog-004.jpg",
      "body": "JSON is the short form of JavaScript Object Notation and JWT is the short form of JSON Web Token. JSON is a text-based format for transmitting data access across web applications. JWT is a self-contained way for securely transmitting information between parties as a JSON. JWT is used for Authorization and Information Exchange. <br /> <br /> When it comes to API authentication and server-to-server authorization, JWT is particularly a useful technology. In terms of Single Sign-On (SSO), it means that a service provider can receive trustworthy information from the authentication server. <br /> <br /> JWT structure is divided into three parts: <strong>Header</strong>, <strong>Payload</strong>, <strong>Signature</strong> <br /> <br /> By sharing a secret key with the Identity Provider, the Service Provider can hash a part of a token it receives and compare it to the signature of the token. Now, if that result matches the signature, the SP knows that the information provided has come from the other entity possessing the key."
   },
   {
      "author": "pmfoysal",
      "date": 1645293600000,
      "title": "What are the difference between Authorization and Authentication?",
      "image": "https://raw.githubusercontent.com/pmfoysal/data/main/images/blog-005.jpg",
      "body": "Authentication is the process where detect an user is valid or not. If the user is valid then do allow some feature which wasn't avaibale for invalid user. Authorization is a process where give some permission to access specific data, resource or function. This term is often used interchangeably with access control or client privilege. There are some difference between them:<br /><br /><strong>Authentication:</strong><br /><strong>1. </strong> Authentication verifies who the user is.<br /><strong>2. </strong> Authentication works through passwords, one-time pins, biometric information, and otherinformation provided or entered by the user.<br /><strong>3. </strong> Authentication is the first step of a good identity and access management process.<br /><strong>4. </strong> Authentication is visible to and partially changeable by the user.<br /><br /><strong>Authorization:</strong><br /><strong>1. </strong> Authorization determines what resources a user can access.<br /><strong>2. </strong> Authorization works through settings that are implemented and maintained by theorganization.<br /><strong>3. </strong> Authorization always takes place after authentication.<br /><strong>4. </strong> Authorization isn't visible to or changeable by the user."
   },
   {
      "author": "pmfoysal",
      "date": 1642615200000,
      "title": "What other services does firebase provide other than Authentication?",
      "image": "https://raw.githubusercontent.com/pmfoysal/data/main/images/blog-006.jpg",
      "body": "The Firebase database offers so many services due to which it has great potential, so that it may easily replace custom backend development depending on the product development stage and the final goal (whether the product is built to engage active users or you need an MVP or a prototype). They provide us many services like given below: <br /> <br /> <strong>1. Authentication</strong> <br /> Authentication is used for recognize the identity of an user. <br /> <br /> <strong>2. Cloud Firestore</strong> <br /> Cloud Firestore is a Database, used for storing any kind of data. <br /> <br /> <strong>3. Cloud Function</strong> <br /> Cloud Function is used for add some function related to backend. <br /> <br /> <strong>4. Analytics</strong> <br /> Analytics is used for analizing the application usage and data;"
   }
]
